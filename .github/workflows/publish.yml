name: Publish Python Package

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (without v prefix)'
        required: true
        default: ''

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine pytest
    
    - name: Extract version from tag or input
      id: get_version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        else
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        fi
    
    - name: Check if version is valid
      run: |
        if ! [[ $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Error: Version $VERSION does not match semantic versioning format (x.y.z)"
          exit 1
        fi
    
    - name: Get current version from pyproject.toml
      id: current_version
      run: |
        CURRENT_VERSION=$(grep -oP 'version = "\K[0-9]+\.[0-9]+\.[0-9]+' pyproject.toml)
        echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
        echo "Current version: $CURRENT_VERSION"
        echo "New version: $VERSION"
    
    - name: Check if version has increased
      run: |
        python -c "
        from packaging import version
        current = version.parse('${{ env.CURRENT_VERSION }}')
        new = version.parse('${{ env.VERSION }}')
        if new <= current:
          print(f'Error: New version {new} is not greater than current version {current}')
          exit(1)
        else:
          print(f'Version check passed: {current} -> {new}')
        "
      
    - name: Update version in pyproject.toml
      run: |
        sed -i "s/version = \"[0-9]*\.[0-9]*\.[0-9]*\"/version = \"$VERSION\"/" pyproject.toml
        sed -i "s/__version__ = \"[0-9]*\.[0-9]*\.[0-9]*\"/__version__ = \"$VERSION\"/" elections_canada_mcp/__init__.py
    
    - name: Run tests
      run: pytest
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip-existing: true
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        name: Release v${{ env.VERSION }}
        body: |
          # Elections Canada MCP Server v${{ env.VERSION }}
          
          New release of the Elections Canada MCP Server.
        files: |
          dist/*
